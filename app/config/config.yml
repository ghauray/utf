imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@UtfCoreBundle/Resources/config/ioc.yml" }
    - { resource: "@UtfWikiBundle/Resources/config/ioc.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    templating:
        engines: ['twig']

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    port: '%mailer_port%'
    encryption: '%mailer_encryption%'
    spool: { type: memory }

sensio_framework_extra:
   router:
        annotations: false

# LOGS
services:
  HtmlFormatter:
      class: Monolog\Formatter\HtmlFormatter
monolog:
    handlers:
        security:
            # log all messages (since debug is the lowest level)
            level:    debug
            type:     stream
            path:     '%kernel.logs_dir%/security.log'
            channels: [security]
        all:
            type: fingers_crossed
            action_level: info
            handler: all_grouped
            excluded_404s:
              - ^/
        all_grouped:
            type: group
            members: [all_nested, all_buffered]
        all_nested:
            type: rotating_file
            max_files: 100
            path: "%kernel.logs_dir%/%kernel.environment%/all/all.log"
            level: error
        all_buffered:
            type: buffer
            handler: all_swift
        all_swift:
            type: swift_mailer
            from_email: "%mailbox_error%"
            to_email: "%mailbox_error%"
            subject: "%mail_error_subject%"
            level: error
            formatter: HtmlFormatter
            content_type: text/html

# RabbitMQ
old_sound_rabbit_mq:
    connections:
        default:
            host:     "%rabbit_mq.host%"
            port:     "%rabbit_mq.port%"
            user:     "%rabbit_mq.user%"
            password: "%rabbit_mq.password%"
            vhost:    '/'
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3
            keepalive: false # requires php-amqplib v2.4.1+ and PHP5.4+
            heartbeat: 0 # requires php-amqplib v2.4.1+
            use_socket: false # default false, requires php_sockets.dll